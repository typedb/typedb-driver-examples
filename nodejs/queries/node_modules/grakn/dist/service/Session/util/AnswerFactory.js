"use strict";function AnswerFactory(a){this.conceptFactory=a}AnswerFactory.prototype.createAnswer=function(a){return a.hasConceptmap()?this.createConceptmap(a.getConceptmap()):a.hasAnswergroup()?this.createAnswergroup(a.getAnswergroup()):a.hasConceptlist()?this.createConceptlist(a.getConceptlist()):a.hasConceptset()?this.createConceptset(a.getConceptset()):a.hasConceptsetmeasure()?this.createConceptsetmeasure(a.getConceptsetmeasure()):a.hasValue()?this.createValue(a.getValue()):void 0},AnswerFactory.prototype.buildExplanation=function(a){return a?{queryPattern:()=>a.getPattern(),answers:()=>a.getAnswersList().map(b=>this.createConceptmap(b))}:null},AnswerFactory.prototype.createConceptmap=function(a){const b=new Map;return a.getMapMap().forEach((a,c)=>{b.set(c,this.conceptFactory.createConcept(a))}),{map:()=>b,explanation:()=>this.buildExplanation(a.getExplanation())}},AnswerFactory.prototype.createValue=function(a){return{number:()=>+a.getNumber().getValue(),explanation:()=>this.buildExplanation(a.getExplanation())}},AnswerFactory.prototype.createConceptlist=function(a){const b=a.getList();return{list:()=>b.getIdsList(),explanation:()=>this.buildExplanation(a.getExplanation())}},AnswerFactory.prototype.createConceptset=function(a){const b=a.getSet();return{set:()=>new Set(b.getIdsList()),explanation:()=>this.buildExplanation(a.getExplanation())}},AnswerFactory.prototype.createConceptsetmeasure=function(a){return{measurement:()=>+a.getMeasurement().getValue(),set:()=>new Set(a.getSet().getIdsList()),explanation:()=>this.buildExplanation(a.getExplanation())}},AnswerFactory.prototype.createAnswergroup=function(a){return{owner:()=>this.conceptFactory.createConcept(a.getOwner()),answers:()=>a.getAnswersList().map(b=>this.createAnswer(b)),explanation:()=>this.buildExplanation(a.getExplanation())}},module.exports=AnswerFactory;