"use strict";function _asyncToGenerator(a){return function(){var b=a.apply(this,arguments);return new Promise(function(a,c){function d(e,f){try{var g=b[e](f),h=g.value}catch(a){return void c(a)}return g.done?void a(h):Promise.resolve(h).then(function(a){d("next",a)},function(a){d("throw",a)})}return d("next")})}}const RequestBuilder=require("./RequestBuilder"),AnswerFactory=require("./AnswerFactory");function GrpcIteratorFactory(a,b){this.communicator=b,this.conceptFactory=a,this.answerFactory=new AnswerFactory(a)}GrpcIteratorFactory.prototype.createQueryIterator=function(a){const b=new Iterator(this.conceptFactory,this.communicator,RequestBuilder.nextReq(a),a=>{const b=a.getIterateRes();if(b.getDone())return null;const c=b.getQueryIterRes().getAnswer();return this.answerFactory.createAnswer(c)});return b.collectConcepts=_asyncToGenerator(function*(){return(yield this.collect()).map(function(b){return Array.from(b.map().values())}).reduce(function(b,a){return b.concat(a)},[])}),b},GrpcIteratorFactory.prototype.createConceptIterator=function(a,b){return new Iterator(this.conceptFactory,this.communicator,RequestBuilder.nextReq(a),(a,c)=>{const d=a.getIterateRes();if(d.getDone())return null;const e=b(d);return c.createConcept(e)})},GrpcIteratorFactory.prototype.createRolePlayerIterator=function(a){return new Iterator(this.conceptFactory,this.communicator,RequestBuilder.nextReq(a),(a,b)=>{const c=a.getIterateRes();if(c.getDone())return null;const d=c.getConceptmethodIterRes().getRelationRoleplayersmapIterRes();return{role:b.createConcept(d.getRole()),player:b.createConcept(d.getPlayer())}})};function Iterator(a,b,c,d){var e=this;this.next=()=>b.send(c).then(b=>d(b,a)).catch(a=>{throw a}),this.collect=_asyncToGenerator(function*(){const a=[];for(let b=yield e.next();b;)a.push(b),b=yield e.next();return a})}module.exports=GrpcIteratorFactory;