/*
 * Copyright (C) 2023 Vaticle
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package com.typedb.examples.cti.model.domain;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.typedb.examples.cti.model.stix.StixDomainObject;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.stream.Stream;

public class Malware extends StixDomainObject {
    @JsonIgnore
    public static List<String> typeList = Stream.of(StixDomainObject.typeList,
                Arrays.asList("aliases", "architecture_execution_envs", "implementation_languages", "capabilities")
                ).flatMap(List::stream).toList();
    @JsonIgnore
    public static List<String> typeString = Stream.of(StixDomainObject.typeString,
                Arrays.asList("name", "description", "malware_types", "architecture_execution_envs",
                "implementation_languages", "capabilities")).flatMap(List::stream).toList();

    @JsonIgnore
    public static final String nameEnt = "malware";
    private String name;
    private String description;
    private String malwareTypes;
    private boolean isFamily;
    private Set<String> aliases;
    private Date firstSeen;
    private Date lastSeen;
    private Set<String> architectureExecutionEnvs;
    private Set<String> implementationLanguages;
    private Set<String> capabilities;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getMalwareTypes() {
        return malwareTypes;
    }

    public void setMalwareTypes(String malwareTypes) {
        this.malwareTypes = malwareTypes;
    }

    public Boolean getFamily() {
        return isFamily;
    }

    public void setFamily(Boolean family) {
        this.isFamily = family;
    }

    public Set<String> getAliases() {
        return aliases;
    }

    public void setAliases(Set<String> aliases) {
        this.aliases = aliases;
    }

    public Date getFirstSeen() {
        return firstSeen;
    }

    public void setFirstSeen(Date firstSeen) {
        this.firstSeen = firstSeen;
    }

    public Date getLastSeen() {
        return lastSeen;
    }

    public void setLastSeen(Date lastSeen) {
        this.lastSeen = lastSeen;
    }

    public Set<String> getArchitectureExecutionEnvs() {
        return architectureExecutionEnvs;
    }

    public void setArchitectureExecutionEnvs(Set<String> architectureExecutionEnvs) {
        this.architectureExecutionEnvs = architectureExecutionEnvs;
    }

    public Set<String> getImplementationLanguages() {
        return implementationLanguages;
    }

    public void setImplementationLanguages(Set<String> implementationLanguages) {
        this.implementationLanguages = implementationLanguages;
    }

    public Set<String> getCapabilities() {
        return capabilities;
    }

    public void setCapabilities(Set<String> capabilities) {
        this.capabilities = capabilities;
    }


}
